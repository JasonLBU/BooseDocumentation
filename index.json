{
  "docs/ASE_Assignment.AppArray.html": {
    "href": "docs/ASE_Assignment.AppArray.html",
    "title": "Class AppArray | mysite",
    "keywords": "Class AppArray Namespace ASE_Assignment Assembly BOOSE App.dll An array command takes the form \"array int myArray 10,2\" or \"array real prices 10\" [array][(type)][(size)][(optional dimentions, 1 if not given)] public class AppArray : Array, ICommand Inheritance object Command Evaluation Array AppArray Implements ICommand Inherited Members Array.type Array.rowS Array.columnS Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppArray() Constructor for AppArray public AppArray() Fields PEEK protected const bool PEEK = false Field Value bool POKE public const bool POKE = true Field Value bool column protected int column Field Value int columns protected int columns Field Value int intArray protected int[,] intArray Field Value int[,] peekVar protected string peekVar Field Value string pokeValue protected string pokeValue Field Value string realArray protected double[,] realArray Field Value double[,] row protected int row Field Value int rows protected int rows Field Value int valueInt protected int valueInt Field Value int valueReal protected double valueReal Field Value double Properties Columns protected int Columns { get; } Property Value int Rows protected int Rows { get; } Property Value int Methods CheckParameters(string[]) Splits the parameter list to check if there 3 or 4 parameters. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] Parameters provided when array command is called Exceptions CommandException Thrown if it does not have 3 or 4 parameters Compile() Parses the parameters and acquires the array name and type to execute. public override void Compile() Execute() Creates a new int or real array public override void Execute() GetIntArray(int, int) Gets the value of an integer element inside the array at its specified row, col position. public override int GetIntArray(int row, int col) Parameters row int Row index col int Column index Returns int The value associated at the position. GetRealArray(int, int) Gets the value of a real element inside the array at its specified row, col position. public override double GetRealArray(int row, int col) Parameters row int The row index col int The column index Returns double The value associated at the position. ProcessArrayParametersCompile(bool) Process parameters whenever 'peak' / 'poke' operations are call. Sets the variable name, row and column. protected override void ProcessArrayParametersCompile(bool peekOrPoke) Parameters peekOrPoke bool ProcessArrayParametersExecute(bool) Executes the 'peak' / 'poke' operation onto an array, it evaluates the parameters and parses their values. protected override void ProcessArrayParametersExecute(bool peekOrPoke) Parameters peekOrPoke bool SetIntArray(int, int, int) Sets the value of an integer element inside the array at its specified row, col position. public override void SetIntArray(int val, int row, int col) Parameters val int Value to set row int The row index col int The column index SetRealArray(double, int, int) Sets the value of a real element inside the array at its specified row, col position. public override void SetRealArray(double val, int row, int col) Parameters val double Value to set row int The row index col int The column index"
  },
  "docs/ASE_Assignment.AppCanvas.html": {
    "href": "docs/ASE_Assignment.AppCanvas.html",
    "title": "Class AppCanvas | mysite",
    "keywords": "Class AppCanvas Namespace ASE_Assignment Assembly BOOSE App.dll A drawable canvas for the BOOSE interpreter, supporting basic graphic commands. public class AppCanvas : ICanvas Inheritance object AppCanvas Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCanvas() Initializes a new instance of the AppCanvas class with default property settings. public AppCanvas() Properties LastHeight Gets or sets the width value from calling rectangle or triangle method. public int LastHeight { get; set; } Property Value int LastRadius Gets or sets the radius value from calling circle method. public int LastRadius { get; set; } Property Value int LastWidth Gets or sets the width value from calling rectangle or triangle method. public int LastWidth { get; set; } Property Value int LastWrittenText public string LastWrittenText { get; set; } Property Value string PenColour Gets or sets the color of the pen. public object PenColour { get; set; } Property Value object Xpos Gets or sets the X-coordinate of the pen position. public int Xpos { get; set; } Property Value int Ypos Gets or sets the Y-coordinates of the pen position. public int Ypos { get; set; } Property Value int Methods Circle(int, bool) Draws a circle at the current pen position with a specified radius. public void Circle(int radius, bool filled) Parameters radius int The radius of the circle. filled bool Indicates whether the circle is filled or not. Exceptions CanvasException Thrown when the radius value is less than or equal to zero. Clear() Clears the canvas by filling the background in the default color. public void Clear() DrawTo(int, int) Draws a line from the current pen position to the specified coordinates. Updates the pen position after drawing. public void DrawTo(int toX, int toY) Parameters toX int The X-coordinate to draw to. toY int The Y-coordinate to draw to. Exceptions CanvasException Thrown if the coordinates are out of bounds of the Canvas. MoveTo(int, int) Moves the pen to the specified coordinates without drawing. public void MoveTo(int x, int y) Parameters x int The new X-coordinate of the pen. y int The new Y-coordinate of the pen. Exceptions CanvasException Thrown if the coordinates are out of bounds of the Canvas. Rect(int, int, bool) Draws a rectangle with specified width and height at the pen position. public void Rect(int width, int height, bool filled) Parameters width int The width of the rectangle. height int The height of the rectangle. filled bool Indicates whether the rectangle is filled or not. Exceptions CanvasException Thrown if width or height values are less than or equal to zero. Reset() Reset the pen position to (0,0) and sets the pen color to default public void Reset() Set(int, int) Sets the size of the canvas display. public void Set(int xSize, int ySize) Parameters xSize int The width of the canvas. ySize int The height of the canvas. SetColour(int, int, int) Sets the pen color using RGB values. public void SetColour(int red, int green, int blue) Parameters red int Red component (0-255). green int Green component (0-255). blue int Blue component (0-255.) Exceptions CanvasException Thrown if the RGB values are out of valid range. Tri(int, int) Draw a triangle with specified width and height at the current pen position. public void Tri(int width, int height) Parameters width int The width of the triangle's base. height int The height of the triangle. Exceptions NotImplementedException Thrown if width or height is less than or equal to zero. WriteText(string) Draws text at the current position. public void WriteText(string text) Parameters text string The text to draw. Exceptions CanvasException Thrown if the graphic object is not initalized. getBitmap() Returns the current Bitmap of the canvas for rendering. public object getBitmap() Returns object The Bitmap object of the canvas"
  },
  "docs/ASE_Assignment.AppCircle.html": {
    "href": "docs/ASE_Assignment.AppCircle.html",
    "title": "Class AppCircle | mysite",
    "keywords": "Class AppCircle Namespace ASE_Assignment Assembly BOOSE App.dll AppCircle class that draws a circle round the current pen position public class AppCircle : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter AppCircle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppCircle() Constructor of AppInt public AppCircle() Methods CheckParameters(string[]) Checks the parameters are valid when the command is parsed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of the parameters provided with circle command. Exceptions CommandException Thrown when radius is invalid or is not a positive integer. Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base circle() method using radius and filled as parameters to draw a circle. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.AppCommandFactory.html": {
    "href": "docs/ASE_Assignment.AppCommandFactory.html",
    "title": "Class AppCommandFactory | mysite",
    "keywords": "Class AppCommandFactory Namespace ASE_Assignment Assembly BOOSE App.dll AppCommandFactory extends CommandFactory to create or replace new commands public class AppCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory AppCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCommandFactory() Initializes a new instance of AppCommandFactory public AppCommandFactory() Methods MakeCommand(string) Handles the command executing for the command factory public override ICommand MakeCommand(string commandType) Parameters commandType string The type of command to run Returns ICommand Command object instance"
  },
  "docs/ASE_Assignment.AppDrawTo.html": {
    "href": "docs/ASE_Assignment.AppDrawTo.html",
    "title": "Class AppDrawTo | mysite",
    "keywords": "Class AppDrawTo Namespace ASE_Assignment Assembly BOOSE App.dll AppDrawTo class that draws a line from current pen position to the specified x,y position. public class AppDrawTo : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters AppDrawTo Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppDrawTo() Constructor for AppMoveTo class public AppDrawTo() Methods CheckParameters(string[]) Checks the parameters toX and toY are valid when they're passed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of parameters provided with DrawTo command. Exceptions CommandException Thrown when toX or toY are invalid or not positive integers. Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base DrawTo() method using toX and toY as parameters to draw a line. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.AppInt.html": {
    "href": "docs/ASE_Assignment.AppInt.html",
    "title": "Class AppInt | mysite",
    "keywords": "Class AppInt Namespace ASE_Assignment Assembly BOOSE App.dll AppInt command class to define and store integer values. public class AppInt : Int, ICommand Inheritance object Command Evaluation Int AppInt Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppInt() Constructor of AppInt class public AppInt() Methods Compile() Called before the command is run for compilation public override void Compile() Execute() Calls the base int class execute() method public override void Execute() Restrictions() Overrides the current restrictions, allows more int variables to be declared public override void Restrictions()"
  },
  "docs/ASE_Assignment.AppMoveTo.html": {
    "href": "docs/ASE_Assignment.AppMoveTo.html",
    "title": "Class AppMoveTo | mysite",
    "keywords": "Class AppMoveTo Namespace ASE_Assignment Assembly BOOSE App.dll AppMoveTo class that sets the current pen position to the specified x,y position public class AppMoveTo : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters AppMoveTo Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppMoveTo() Constructor for AppMoveTo class public AppMoveTo() Methods CheckParameters(string[]) Checks the parameters x and y are valid when they're passed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of parameters provided with MoveTo command. Exceptions CommandException Thrown when the x and y values are invalid or not positive integers. Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base MoveTo() method using x and y as parameters to set new cursor position. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.AppPen.html": {
    "href": "docs/ASE_Assignment.AppPen.html",
    "title": "Class AppPen | mysite",
    "keywords": "Class AppPen Namespace ASE_Assignment Assembly BOOSE App.dll AppPen class that sets the color of the pen object public class AppPen : CommandThreeParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandThreeParameters AppPen Implements ICommand Inherited Members CommandThreeParameters.param3 CommandThreeParameters.param3unprocessed CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppPen() Constructor for AppPen class public AppPen() Methods CheckParameters(string[]) Checks the parameters are valid when the command is parsed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of parameters provided with pen command Exceptions CommandException Thrown when the rgb values are invalid or not in range (0-255). Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base SetColour() method using red, green and blue as parameters to set pen colour. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.AppReal.html": {
    "href": "docs/ASE_Assignment.AppReal.html",
    "title": "Class AppReal | mysite",
    "keywords": "Class AppReal Namespace ASE_Assignment Assembly BOOSE App.dll AppReal command class to define and store double values. public class AppReal : Real, ICommand Inheritance object Command Evaluation Real AppReal Implements ICommand Inherited Members Real.Value Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppReal() Constructor of AppReal class public AppReal() Methods Compile() Called before the command is run for compilation public override void Compile() Execute() Calls the base real class execute() method public override void Execute() Restrictions() Overrides the current restrictions, allows more real variables to be declared public override void Restrictions()"
  },
  "docs/ASE_Assignment.AppRect.html": {
    "href": "docs/ASE_Assignment.AppRect.html",
    "title": "Class AppRect | mysite",
    "keywords": "Class AppRect Namespace ASE_Assignment Assembly BOOSE App.dll AppRect class that draws a rectangle with provided width and height at the current pen position. public class AppRect : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters AppRect Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppRect() Constructor for AppRect class public AppRect() Methods CheckParameters(string[]) Checks the parameters are valid when the command is parsed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of the parameters provided with Rect command. Exceptions CommandException Thrown when width and height are invalid or not positive integers. Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base canvas Rect() method using width, height and filled as parameters to draw a rectangle. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.AppTriangle.html": {
    "href": "docs/ASE_Assignment.AppTriangle.html",
    "title": "Class AppTriangle | mysite",
    "keywords": "Class AppTriangle Namespace ASE_Assignment Assembly BOOSE App.dll AppTriangle class that draws a triangle provided with width and height at the current pen position. public class AppTriangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters AppTriangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppTriangle() Constructor for AppTriangle class public AppTriangle() Methods CheckParameters(string[]) Checks the parameters are valid when the command is parsed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of parameters provided with Tri command. Exceptions CommandException Thrown when the width and height are invalid or not positive integers. Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base canvas Tri() method using width and height as parameters to draw a triangle. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.AppWrite.html": {
    "href": "docs/ASE_Assignment.AppWrite.html",
    "title": "Class AppWrite | mysite",
    "keywords": "Class AppWrite Namespace ASE_Assignment Assembly BOOSE App.dll AppWrite class thats writes text onto a canvas. public class AppWrite : CanvasCommand, ICommand Inheritance object Command CanvasCommand AppWrite Implements ICommand Inherited Members CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppWrite() Constructor for AppWrite class public AppWrite() Methods CheckParameters(string[]) Checks the parameters are valid when the command is parsed. public override void CheckParameters(string[] Parameters) Parameters Parameters string[] List of parameters provided with write command Exceptions CommandException Thrown when write value is empty or null Compile() Called before the command is run for compilation. public override void Compile() Execute() Calls the base canvas WriteText() method using textToWrite as a parameter to display text. public override void Execute() Set(StoredProgram, string) Set a Command Object public override void Set(StoredProgram Program, string Params) Parameters Program StoredProgram Reference to valid StoredProgram Params string Original parameter list"
  },
  "docs/ASE_Assignment.BooseForm.html": {
    "href": "docs/ASE_Assignment.BooseForm.html",
    "title": "Class BooseForm | mysite",
    "keywords": "Class BooseForm Namespace ASE_Assignment Assembly BOOSE App.dll The main windows form for the BOOSE interpreter. It manages the graphical UI and program execution. public class BooseForm : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form BooseForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BooseForm() Initialize a new instance of the BooseForm class. Sets up a canvas, command factory, stored program, and parser. public BooseForm() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "docs/ASE_Assignment.html": {
    "href": "docs/ASE_Assignment.html",
    "title": "Namespace ASE_Assignment | mysite",
    "keywords": "Namespace ASE_Assignment Classes AppArray An array command takes the form \"array int myArray 10,2\" or \"array real prices 10\" [array][(type)][(size)][(optional dimentions, 1 if not given)] AppCanvas A drawable canvas for the BOOSE interpreter, supporting basic graphic commands. AppCircle AppCircle class that draws a circle round the current pen position AppCommandFactory AppCommandFactory extends CommandFactory to create or replace new commands AppDrawTo AppDrawTo class that draws a line from current pen position to the specified x,y position. AppInt AppInt command class to define and store integer values. AppMoveTo AppMoveTo class that sets the current pen position to the specified x,y position AppPen AppPen class that sets the color of the pen object AppReal AppReal command class to define and store double values. AppRect AppRect class that draws a rectangle with provided width and height at the current pen position. AppTriangle AppTriangle class that draws a triangle provided with width and height at the current pen position. AppWrite AppWrite class thats writes text onto a canvas. BooseForm The main windows form for the BOOSE interpreter. It manages the graphical UI and program execution."
  },
  "docs/BooseTest.AppCanvasTests.html": {
    "href": "docs/BooseTest.AppCanvasTests.html",
    "title": "Class AppCanvasTests | mysite",
    "keywords": "Class AppCanvasTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppCanvasTests Inheritance object AppCanvasTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods drawTo_test() Unit testing for drawTo() command. Check if pen is in correct position on Canvas. [TestMethod] public void drawTo_test() moveTo_test() Unit testing for moveTo() command. Checks if pen is in correct position on Canvas [TestMethod] public void moveTo_test() multiline_Test() Unit testing for multiline program of several moveTo/drawTo are called. With each update from commands, pen is in expected position. [TestMethod] public void multiline_Test()"
  },
  "docs/BooseTest.AppCircleTests.html": {
    "href": "docs/BooseTest.AppCircleTests.html",
    "title": "Class AppCircleTests | mysite",
    "keywords": "Class AppCircleTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppCircleTests Inheritance object AppCircleTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParameters_InvalidInteger() Tests the CheckParameters() method of AppCircle, by providing it a negative int value as a parameter. It will check if the message thrown from the exception is the same as in AppCircle. [TestMethod] public void CheckParameters_InvalidInteger() CheckParameters_InvalidLength() Tests the CheckParameters() method of AppCircle, by providing it a invalid number of parameters. The circle command requires 1 parameter and if the array list length is invalid, throws a CommandException. It will check if the message thrown from the exception is the same as in AppCircle. [TestMethod] public void CheckParameters_InvalidLength() CheckParameters_InvalidVariable() Tests the AppCircle()'s CheckParameters() method detecting an undefined variable. It will check if the message thrown from the exception is the same as in AppCircle. [TestMethod] public void CheckParameters_InvalidVariable() CheckParameters_ValidInteger() Tests the CheckParameters() method of AppCircle, to validate int value as a correct parameter. [TestMethod] public void CheckParameters_ValidInteger() CheckParameters_ValidLength() Tests the CheckParameters() method of AppCircle, by providing it the correct amount of parameters [TestMethod] public void CheckParameters_ValidLength() CheckParameters_ValidVariable() Unit testing for AppCircle's CheckParameters() method when handling a variable parameter. [TestMethod] public void CheckParameters_ValidVariable() Execute_Integer_Test() Unit Testing for executing the AppCircle command by using a int value as a parameter, simulated in a program window. The circle command will store the value of radius and set it to the LastRadius property, to check that canvas received the correct radius thus the command has succesfully run. [TestMethod] public void Execute_Integer_Test() Execute_Variable_Test() Unit Testing for executing the AppCircle command by using a declared int variable as a parameter, simulated in a program window. The circle command will store the value of the variable and set it to the LastRadius property, to check that canvas received the correct radius thus the command has succesfully run. [TestMethod] public void Execute_Variable_Test() Setup() Initializes the test environment before each test method runs. Sets up necessary instances of AppCircle, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.AppCommandFactoryTests.html": {
    "href": "docs/BooseTest.AppCommandFactoryTests.html",
    "title": "Class AppCommandFactoryTests | mysite",
    "keywords": "Class AppCommandFactoryTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppCommandFactoryTests Inheritance object AppCommandFactoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand_InvalidType() Provide the factory invalid commands types that do not exist. [TestMethod] public void MakeCommand_InvalidType() MakeCommand_ValidType() Provide the factory valids command types. [TestMethod] public void MakeCommand_ValidType()"
  },
  "docs/BooseTest.AppDrawToTests.html": {
    "href": "docs/BooseTest.AppDrawToTests.html",
    "title": "Class AppDrawToTests | mysite",
    "keywords": "Class AppDrawToTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppDrawToTests Inheritance object AppDrawToTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParameters_InvalidInteger() Tests the CheckParameters() method of AppDrawTo, by providing it invalid int values as parameters. It will check if the message thrown from the exception is the same as in AppDrawTo. [TestMethod] public void CheckParameters_InvalidInteger() CheckParameters_InvalidLength() Tests the CheckParameters() method of AppDrawTo, by providing it invalid number of parameters. The drawto command requires 2 parameter and if the array list length is invalid, throws a CommandException. It will check if the message thrown from the exception is the same as in AppDrawTo. [TestMethod] public void CheckParameters_InvalidLength() CheckParameters_ValidInteger() Tests the CheckParameters() method of AppDrawTo, to validate int values as correct parameters. [TestMethod] public void CheckParameters_ValidInteger() CheckParameters_ValidLength() Tests the CheckParameters() method of AppDrawTo, by providing correct amount of parameters [TestMethod] public void CheckParameters_ValidLength() Execute_Integer_Test() Unit testing for executing the AppDrawTo command by using int values as parameters, simulated in a program window. The drawTo command will store the new toX and toY position values, and set it to their property fields to update the pen position. It then checks to verfiy pen is in the correct position [TestMethod] public void Execute_Integer_Test() Setup() Initializes the test environment before the test method runs. Sets up necessary instances of AppDrawTo, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.AppMoveToTests.html": {
    "href": "docs/BooseTest.AppMoveToTests.html",
    "title": "Class AppMoveToTests | mysite",
    "keywords": "Class AppMoveToTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppMoveToTests Inheritance object AppMoveToTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParameters_InvalidInteger() Tests the CheckParameters() method of AppDrawTo, by providing it invalid int values as parameters. It will check if the same message thrown from the exception is the same as in AppMoveTo. [TestMethod] public void CheckParameters_InvalidInteger() CheckParameters_InvalidLength() Tests the CheckParameters() method of AppMoveTo, by providing it a invalid number of parameters. The moveto command requires 2 parameter and if the array list length is invalid, throws a CommandException. It will check if the same message thrown from the exception is the same as in AppMoveTo. [TestMethod] public void CheckParameters_InvalidLength() CheckParameters_ValidInteger() Tests the CheckParameters() method of AppMoveTo, to validate int values as correct parameters. [TestMethod] public void CheckParameters_ValidInteger() CheckParameters_ValidLength() Tests the CheckParameters() method of AppMoveTo, by providing correct amount of parameters [TestMethod] public void CheckParameters_ValidLength() Execute_Integer_Test() Unit testing for executing the AppMoveTo command by using int values as parameters, simulated in a program window. The moveTo command will store the new xPos and yPos position values, and set it to their property fields to update the pen position. It then checks to verfiy pen is in the correct position [TestMethod] public void Execute_Integer_Test() Setup() Initializes the test environment before the test method runs. Sets up necessary instances of AppMoveTo, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.AppPenTests.html": {
    "href": "docs/BooseTest.AppPenTests.html",
    "title": "Class AppPenTests | mysite",
    "keywords": "Class AppPenTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppPenTests Inheritance object AppPenTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParamaters_InvalidVariable() Tests the CheckParameters() method of AppPen, detecting an undefined variable. It will check if the same message thrown from the exception is the same as in AppPen. [TestMethod] public void CheckParamaters_InvalidVariable() CheckParameters_InvalidInteger() Tests the CheckParameters() method of AppPen, by providing it a negative int value as a parameter. It will check if the same message thrown from the exception is the same as in AppPen. [TestMethod] public void CheckParameters_InvalidInteger() CheckParameters_InvalidLength() Tests the CheckParameters() method of AppPen, by providing it a invalid number of parameters. The pen command requires 3 parameter and if the array list length is invalid, throws a CommandException. It will check if the same message thrown from the exception is the same as in AppPen. [TestMethod] public void CheckParameters_InvalidLength() CheckParameters_ValidInteger() Tests the CheckParameters() method of AppPen, to validate int values as correct parameters. [TestMethod] public void CheckParameters_ValidInteger() CheckParameters_ValidLength() Tests the CheckParameters() method of AppPen, by providing it the correct amount of parameters. [TestMethod] public void CheckParameters_ValidLength() CheckParameters_ValidVariable() Tests the CheckParameters() method of AppPen, to validate variables red, green, blue as correct parameters. [TestMethod] public void CheckParameters_ValidVariable() Execute_Integer_Test() Unit Testing for executing the AppPen command by using int values as parameters, simulated in a program window. The pen color object is stored inside Canvas's PenColour property to check the correct pen values are received thus the command has properly run. [TestMethod] public void Execute_Integer_Test() Execute_Variable_Test() Unit Testing for executing the AppPen command by using a declared int variable as a parameter, simulated in a program window. The pen color object is stored inside Canvas's PenColour property to check the correct pen values are received thus the command has properly run. [TestMethod] public void Execute_Variable_Test() Setup() Initializes the test environment before each test method runs. Sets up necessary instances of AppWrite, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.AppRectTests.html": {
    "href": "docs/BooseTest.AppRectTests.html",
    "title": "Class AppRectTests | mysite",
    "keywords": "Class AppRectTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppRectTests Inheritance object AppRectTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParameters_InvalidInteger() Tests the CheckParameters() method of AppRect, by providing it invalid int values as parameters. It will check if the message thrown from the exception is the same as in AppRect. [TestMethod] public void CheckParameters_InvalidInteger() CheckParameters_InvalidLength() Tests the CheckParameters() method of AppRect, by providing it a invalid number of parameters. The rect command requires 2 parameters and if the array list length is invalid, throws a CommandException. It will check if the message thrown from the exception is the same as in AppRect. [TestMethod] public void CheckParameters_InvalidLength() CheckParameters_InvalidVariable() Tests the CheckParameters() method of AppRect, detecting an undefined variable. It will check if the message thrown from the exception is the same as in AppRect. [TestMethod] public void CheckParameters_InvalidVariable() CheckParameters_ValidInteger() Tests the CheckParameters() method of AppRect, to validate int values as correct parameters. [TestMethod] public void CheckParameters_ValidInteger() CheckParameters_ValidLength() Tests the CheckParameters() method of AppRect, by providing it the correct amount of parameters. [TestMethod] public void CheckParameters_ValidLength() CheckParameters_ValidVariable() Tests the CheckParameters() method of AppRect, to validate variables both width and height as correct parameters. [TestMethod] public void CheckParameters_ValidVariable() Execute_Integer_Test() Unit Testing for executing the AppRect command by using an int values as parameters, simulated in a program window. The width and height, are stored inside Canvas's LastHeight + LastWidth properties to check the correct height and width, thus the command has properly run. [TestMethod] public void Execute_Integer_Test() Execute_Variable_Test() Unit Testing for executing the AppRect command by using a declared int variable as a parameter, simulated in a program window. The width and height, are stored inside Canvas's LastHeight + LastWidth properties to check the correct height and width, thus the command has properly run. [TestMethod] public void Execute_Variable_Test() Setup() Initializes the test environment before each test method runs. Sets up necessary instances of AppRect, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.AppTriangleTests.html": {
    "href": "docs/BooseTest.AppTriangleTests.html",
    "title": "Class AppTriangleTests | mysite",
    "keywords": "Class AppTriangleTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppTriangleTests Inheritance object AppTriangleTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParameters_InvalidInteger() Tests the CheckParameters() method of AppTriangle, by providing it invalid int values as parameters. It will check if the message thrown from the exception is the same as in AppTriangle. [TestMethod] public void CheckParameters_InvalidInteger() CheckParameters_InvalidLength() Tests the CheckParameters() method of AppTriangle, by providing it a invalid number of parameters. The tri command requires 2 parameters and if the array list length is invalid, throws a CommandException. It will check if the message thrown from the exception is the same as in AppTriangle. [TestMethod] public void CheckParameters_InvalidLength() CheckParameters_ValidInteger() Tests the CheckParameters() method of AppTriangle, to validate int values as correct parameters. [TestMethod] public void CheckParameters_ValidInteger() CheckParameters_ValidLength() Tests the CheckParameters() method of AppTriangle, by providing it the correct amount of parameters. [TestMethod] public void CheckParameters_ValidLength() Execute_Integer_Test() Unit Testing for executing the AppTriangle command by using an int values as parameters, simulated in a program window. The width and height, are stored inside Canvas's LastHeight + LastWidth properties to check the correct height and width, thus the command has properly run. [TestMethod] public void Execute_Integer_Test() Setup() Initializes the test environment before each test method runs. Sets up necessary instances of AppTriangle, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.AppWriteTests.html": {
    "href": "docs/BooseTest.AppWriteTests.html",
    "title": "Class AppWriteTests | mysite",
    "keywords": "Class AppWriteTests Namespace BooseTest Assembly BooseTest.dll [TestClass] public class AppWriteTests Inheritance object AppWriteTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckParameters_ExpressionWithString() Unit testing for CheckParameters() method with an expression containing a string. Verifies that no exception is thrown when a valid expression with a string is passed. [TestMethod] public void CheckParameters_ExpressionWithString() CheckParameters_ValidExpression() Unit testing for AppWrite's CheckParameters() method with an expression parameter. Verifies that no exception is thrown when a valid expression is passed. [TestMethod] public void CheckParameters_ValidExpression() CheckParameters_ValidString() Unit testing for CheckParameters() method with a string parameter. [TestMethod] public void CheckParameters_ValidString() CheckParameters_ValidVariable() Unit testing for AppWrite's CheckParameters() method with a variable parameter. Verifies that no exception is thrown when a valid variable is passed. [TestMethod] public void CheckParameters_ValidVariable() Execute_ExpressionWithString_Test() Unit Testing for executing the AppWrite command by declaring a real variable to be used an expression along with a string for AppWrite to display, simulated in a program window. [TestMethod] public void Execute_ExpressionWithString_Test() Execute_Expression_Test() Unit Testing for executing the AppWrite command by declaring two real variables to be used as an expression for AppWrite to display, simulated in a program window. [TestMethod] public void Execute_Expression_Test() Execute_String_Test() Unit Testing for executing the AppWrite command by using a normal string parameter, simulated in a program window. The written text, is stored inside Canvas's LastWrittenText property to check the correct string is received, thus the command has properly run. [TestMethod] public void Execute_String_Test() Execute_Variable_Test() Unit Testing for executing the AppWrite command by using a real variable as a parameter, simulated in a program window. [TestMethod] public void Execute_Variable_Test() Setup() Initializes the test environment before each test method runs. Sets up necessary instances of AppWrite, StoredProgram, AppCanvas, Parser, and AppCommandFactory. [TestInitialize] public void Setup()"
  },
  "docs/BooseTest.html": {
    "href": "docs/BooseTest.html",
    "title": "Namespace BooseTest | mysite",
    "keywords": "Namespace BooseTest Classes AppCanvasTests AppCircleTests AppCommandFactoryTests AppDrawToTests AppMoveToTests AppPenTests AppRectTests AppTriangleTests AppWriteTests"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | mysite",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | mysite",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | mysite",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}